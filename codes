 Package 
library(MCMCglmm)

# Data
data=read.table("rice.txt",h=T)
colnames(data)=c("GEN","SEASON","BL_ENV","ENV","GY","FLOR","PH")
head(data)

# Quantities required for Bayesian analysis
niter=3000000 # Number of iterations of MCMC algorithm
thin=10 # Thin value 
Burnin=100000 # Burn-in value

# Season
SEASON=unique(data$SEASON)[order(unique(data$SEASON))]

for(i in 1:length(Seanson)) Â # Looping for season
{
data1=data[data$SEASON==SEASON[i],] # Data for ith season

if(i==1){
# Hyperparameters for the first season
V_e=diag(1,9)
nu_e=0.002
V_1=diag(1,9)
nu_1=0.002
V_2=diag(1,9)
nu_2=0.002}


if(i!=1){
Mo=posterior.mode(model$VCV)
M=colMeans(model$VCV)

Mo_1=matrix(Mo[1:81],9,9) # Mode of genetic covariance matrix
M_1=matrix(M[1:81],9,9) # Expected value of genetic covariance matrix

Mo_2=matrix(Mo[82:162],9,9) # Mode of block covariance matrix
M_2=matrix(M[82:162],9,9) # Expected value of block covariance matrix

Mo_e=matrix(Mo[163:243],9,9) # Mode of residual covariance matrix
M_e=matrix(M[163:243],9,9) # Expected value of residual covariance matrix

# Hyperparameters for the others seasons
nu_1=(10*M_1[1,1]+10*Mo_1[1,1])/(M_1[1,1]-Mo_1[1,1])
V_1=M_1*((nu_1-10)/nu_1)

nu_2=(10*M_2[1,1]+10*Mo_2[1,1])/(M_2[1,1]-Mo_2[1,1])
V_2=M_2*((nu_2-10)/nu_2)

nu_e=(10*M_e[1,1]+10*Mo_e[1,1])/(M_e[1,1]-Mo_e[1,1])
V_e=M_e*((nu_e-10)/nu_e)
}

# Definition of prior distribution
prior=list(R=list(V=V_e, nu=nu_e), 
G=list(G1=list(V=V_1, nu=nu_1),
G2=list(V=V_2, nu=nu_2)))

# Analysis
model = MCMCglmm(fixed = cbind(GY,FLOR,PH)~trait:ENV, 
random=~us(trait:ENV):GEN+us(trait:ENV):BL_ENV, 
rcov = ~ us(trait:ENV):units, 
data=data1, 
prior=prior, 
family = c("gaussian", "gaussian","gaussian"), 
DIC=TRUE, 
nitt=niter, 
thin=thin, 
burnin=Burnin,
pr=T,
singular.ok=TRUE)

print(summary(model))

}
